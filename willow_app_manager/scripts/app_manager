#! /usr/bin/env python

"""
usage: %prog [args]
"""

import roslib
roslib.load_manifest('willow_app_manager')

import os
import sys
import string
from optparse import OptionParser

import app_manager
import rospy

def main(argv, stdout, environ):

    args = rospy.myargv()
    parser = OptionParser()

    applist_default = app_manager.get_default_applist_directory()
    
    parser.add_option("--applist", dest="applist_directory",
                      default=applist_default,
                      help="path to applist directory", metavar="PATH")
    options, args = parser.parse_args(args)
    if not os.path.exists(options.applist_directory):
      parser.error("applist directory [%s] does not exist.\nUse --applist to set the correct location"%(options.applist_directory))
    
    rospy.init_node('app_manager')

    robot_name = rospy.get_param('/robot/name', 'robot')
    interface_master = rospy.get_param('~interface_master', 'http://localhost:11312')

    try:
        app_list = app_manager.AppList([options.applist_directory,])
    except app_manager.AppException as e:
        print >> sys.stderr, "Failed to load app list: %s"%(str(e))
        sys.exit(1)

    app_store = None

    app_store_url = rospy.get_param('/robot/app_store_url', '')
    if (app_store_url != ""):
        try:
            app_path = os.path.join(roslib.rosenv.get_ros_home(), "app_store")
            if (not os.path.exists(app_path)):
                os.makedirs(app_path)
            app_store = app_manager.AppStore(app_store_url, app_path)
            app_list.add_directory(os.path.join(app_path, "installed"))
        except app_manager.AppException as e:
            print >> sys.stderr, "Failed to load app store: %s"%(str(e))
            sys.exit(1)
    
    am = app_manager.AppManager(robot_name, interface_master, app_list, app_store)

    rospy.on_shutdown(am.shutdown)

    rospy.spin()



if __name__ == "__main__":
    main(sys.argv, sys.stdout, os.environ)
